version: '3.8'

services:
  # Backend API Service - Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: admin-dashboard-backend-prod
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CLIENT_URL=${CLIENT_URL:-http://localhost}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    networks:
      - admin-dashboard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend React Service - Production with Nginx
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000/api}
    container_name: admin-dashboard-frontend-prod
    restart: always
    ports:
      - "80:80"
    networks:
      - admin-dashboard-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  admin-dashboard-network:
    driver: bridge

