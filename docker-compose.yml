version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: admin-dashboard-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - CLIENT_URL=http://localhost:3000
      # Supabase credentials - Add your actual values in .env file
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      # Email configuration (optional)
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - admin-dashboard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Service
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      target: development
      args:
        - REACT_APP_API_URL=http://localhost:5000/api
    container_name: admin-dashboard-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./front-end:/app
      - /app/node_modules
      - /app/build
    networks:
      - admin-dashboard-network
    depends_on:
      - backend
    stdin_open: true
    tty: true

networks:
  admin-dashboard-network:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules:

